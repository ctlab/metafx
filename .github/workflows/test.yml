name: Test
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-12, macos-11]
    
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9.5
      uses: actions/setup-python@v4
      with:
        python-version: 3.9.5
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install coreutils (macOS)
      if : ${{ matrix.os == 'macos-12' || matrix.os == 'macos-11' }}
      run: |
        brew update-reset
        brew install coreutils
    - name: metafx metafast
      run: |
        export PATH=bin:$PATH
        metafx metafast -t 6 -m 6G -k 31 -i test_data/test/* test_data/3* test_data/4* -b1 200 -b2 5000 -l 50 -w wd_metafast --skip-graph
    - name: metafx colored
      run: |
        export PATH=bin:$PATH
        metafx colored -t 6 -m 6G -k 31 -i test_data/sample_list_3.txt --n-comps 100 --perc 0.7 -w wd_colored
    - name: metafx chisq (with depth)
      run: |
        export PATH=bin:$PATH
        metafx chisq -t 6 -m 6G -k 31 -i test_data/sample_list.txt -w wd_chisq_4 -n 1000
        metafx chisq -t 6 -m 6G -k 31 -i test_data/sample_list_3.txt -w wd_chisq_3 --skip-graph -n 10000 --depth 15
    - name: metafx feature_analysis
      run: |
        export PATH=bin:$PATH
        mkdir reads
        ln -s `pwd`/test_data/3* reads/
        ln -s `pwd`/test_data/4* reads/
        ln -s `pwd`/test_data/test/* reads/
        metafx feature_analysis -k 31 -t 6 -m 6G -f wd_chisq_4/ -n A_19 -r reads/ --relab 0.5 -w wd_feat_analysis
    - name: metafx stats
      run: |
        export PATH=bin:$PATH
        metafx stats -t 6 -m 6G -k 31 -i test_data/sample_list.txt -w wd_stats --skip-graph
    - name: metafx metaspades (macOS)
      if : ${{ matrix.os == 'macos-12' || matrix.os == 'macos-11' }}
      run: |
        curl -L https://github.com/ablab/spades/releases/download/v3.15.5/SPAdes-3.15.5-Darwin.tar.gz -o SPAdes-3.15.5-Darwin.tar.gz
        tar -zxf SPAdes-3.15.5-Darwin.tar.gz
        export PATH=bin:$PATH
        export PATH=SPAdes-3.15.5-Darwin/bin/:$PATH
        metafx metaspades -t 6 -m 6G -k 31 -i test_data/33* -b1 100 -b2 1000 -l 50 -w wd_metaspades --skip-graph
    - name: metafx metaspades (Linux)
      if : matrix.os == 'ubuntu-20.04'
      run: |
        wget https://github.com/ablab/spades/releases/download/v3.15.5/SPAdes-3.15.5-Linux.tar.gz
        tar -xzf SPAdes-3.15.5-Linux.tar.gz
        export PATH=bin:$PATH
        export PATH=SPAdes-3.15.5-Linux/bin/:$PATH
        metafx metaspades -t 6 -m 6G -k 31 -i test_data/33* -b1 100 -b2 1000 -l 50 -w wd_metaspades --skip-graph
    - name: metafx unique & metafx pca
      run: |
        export PATH=bin:$PATH
        metafx unique -t 6 -m 6G -k 31 -i test_data/sample_list_train.txt -w wd_unique_pca --kmers-dir wd_metafast/kmer-counter-many/kmers
        metafx pca -f wd_unique_pca/feature_table.tsv -i wd_unique_pca/samples_categories.tsv --show -w wd_pca
    - name: metafx fit
      run: |
        export PATH=bin:$PATH
        metafx fit -f wd_unique_pca/feature_table.tsv -i wd_unique_pca/samples_categories.tsv -w wd_fit
    - name: metafx cv
      run: |
        export PATH=bin:$PATH
        metafx cv -f wd_unique_pca/feature_table.tsv -i wd_unique_pca/samples_categories.tsv -w wd_cv -n 2 --grid -t 6
    - name: metafx calc_features
      run: |
        export PATH=bin:$PATH
        metafx calc_features -t 6 -m 6G -k 31 -i test_data/test_*.fastq.gz -d wd_unique_pca -w wd_calc_features
    - name: metafx predict
      run: |
        export PATH=bin:$PATH
        echo -e "test_A\tA\ntest_B\tB\ntest_C\tC\ntest_D\tD\n" > test_labels.tsv
        metafx predict -f wd_calc_features/feature_table.tsv --model wd_cv/rf_model_cv.joblib -w wd_predict -i test_labels.tsv
    - name: metafx fit_predict
      run: |
        export PATH=bin:$PATH
        metafx fit_predict -f wd_unique_pca/feature_table.tsv -i wd_unique_pca/samples_categories.tsv -w wd_fit_predict
    - name: metafx extract_kmers
      run: |
        export PATH=bin:$PATH
        metafx extract_kmers -t 6 -m 6G -k 31 -i test_data/test/* test_data/3* test_data/4* -w wd_kmers
    - name: metafx bandage (macOS)
      if : ${{ matrix.os == 'macos-12' || matrix.os == 'macos-11' }}
      run: |
        mkdir Bandage
        cd Bandage
        curl -L https://github.com/ctlab/BandageNG/releases/download/continuous/BandageNG-macOS.dmg -o BandageNG 
        chmod +x BandageNG
        cd ..
        export PATH=bin:$PATH
        export PATH=Bandage/:$PATH
        export PATH=SPAdes-3.15.5-Darwin/bin/:$PATH
        metafx bandage -w wd_bandage --draw-graph -f wd_unique_pca/ -n 20
    - name: metafx bandage (Linux)
      if : matrix.os == 'ubuntu-20.04'
      run: |
        mkdir Bandage
        cd Bandage
        wget -O BandageNG https://github.com/ctlab/BandageNG/releases/download/continuous/BandageNG-Linux.AppImage
        chmod +x BandageNG
        cd ..
        export PATH=bin:$PATH
        export PATH=Bandage/:$PATH
        export PATH=SPAdes-3.15.5-Linux/bin/:$PATH
        metafx bandage -w wd_bandage --draw-graph -f wd_unique_pca/ -n 20
